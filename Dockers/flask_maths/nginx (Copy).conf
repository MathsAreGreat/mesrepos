worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Define a cache zone
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    upstream web_servers {
        server web:7000;
    }

    server {
        listen 80;

        server_name localhost;

        location / {
            rewrite ^/(.*)$ /$1 break;

            proxy_pass http://web_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache my_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Add a new location block for MathJax to handle CORS
        location /mathjax {
            rewrite ^/mathjax(.*)$ /mathjax$1 break;
            proxy_pass http://mathjax:7777;

            # CORS settings
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        # Add a new location block for MathJax to handle CORS
        # location /koora {
        #     rewrite ^/koora(.*)$ /koora$1 break;
        #     proxy_pass http://koora:4500;

        #     if ($request_method = 'OPTIONS') {
        #         return 204;
        #     }
        # }
    }
}
